*lion.txt*  Plugin to define a code alignment operator

Author: Tom McDonald <http://github.com/tommcdo>
License: Same terms as Vim itself (see |license|)

This plugin is only available if 'compatible' is not set.

INTRODUCTION                                    *lion*

This plugin provides operators for aligning text to a specific character.
The operators are designed to work as closely as possible to the built-in
Vim |operators|. 

MAPPINGS                                        *lion-mappings*

                                                *gl* *lion-right-align*
[count]gl{motion}{char} Align text within {motion} to [count] occurrences
                        of {char}. Spaces are added to the left of each
                        {char} in the line up to the [count]th position in
                        the line.

                                                *gL* *lion-left-align*
[count]gL{motion}{char} Align text within {motion} to [count] occurrences
                        of {char}. Spaces are added to the right of each
                        {char} in the line up to the [count]th position in
                        the line.

                                                *g=* *lion-equal-align*
[count]g={motion}       Align text within {motion} to [count] "=" characters.
                        Synonym for "[count]gl{motion}=".

                                                *g:* *lion-colon-align*
[count]g:{motion}       Align text within {motion} to [count] ":" characters.
                        Synonym for "[count]gL{motion}:".

EXAMPLES                                        *lion-examples*

In the below examples, an asterisk (*) denotes the position of cursor. This
is primarily to help understand {motion}s from the example commands.

  Old text                  Command     New text ~

  $name = "Tom";            glip=       $name     = "Tom";
  $birthday =* "Jan 12";    g=ip        $birthday = "Jan 12";
  $age = 25;                            $age      = 25;

  fish, monkey, giraffe*    2gL3j,      fish,    monkey,   giraffe
  a, b, c                               a,       b,        c
  45, saturday, 0                       45,      saturday, 0
  goodbye, cruel, lamp                  goodbye, cruel,    lamp

CONFIGURATION                                   *lion-configuration*

Mappings can be configured with the following options:

  Option               Description                        Default ~

  g:lion_create_maps   Whether to create mappings         1
  g:lion_map_right     Mapping for right-align operator   gl
  g:lion_map_left      Mapping for left-align operator    gL
  g:lion_map_equal     Mapping for equal-align operator   g=
  g:lion_map_colon     Mapping for colon-align operator   g:

ISSUES                                          *lion-issues*

These operators currently do not support |blockwise-visual| mode. They may
appear to work, but they are simply using the start and ending line numbers
and operating on each of those lines as a whole.

The align operators compute the virtual position of {char} by substituting
<Tab> characters with a number of spaces, defined by 'tabstop'. If used across
lines with different indentation levels, the resulting aligned text may look
inconsistent if 'tabstop' is changed (e.g. in someone else's text editor).

{char} is interpreted as a single character pattern, so a command like
"gli{." will not work.

TODO                                            *lion-todo*

1. Add support for |blockwise-visual| mode.
2. Interpret {char} as a literal character instead of a pattern.

MY LOVE                                         *lion-my-love*

The love of my life (and Vim plugin hero) is my beautiful wife, Maya. <3

 vim:tw=78:ts=8:ft=help:norl:
